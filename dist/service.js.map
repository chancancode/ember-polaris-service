{"version":3,"file":"service.js","sources":["../src/service.ts"],"sourcesContent":["import { assert, runInDebug } from '@ember/debug';\nimport { associateDestroyableChild } from '@ember/destroyable';\nimport {\n  type ServiceDecorator,\n  detect,\n  service as serviceDecorator,\n} from './decorator/index.ts';\nimport { lookup } from './primitives.ts';\nimport {\n  type ServiceFactory,\n  setServiceManager,\n  isServiceFactory,\n} from './manager.ts';\nimport { type Scope, getScope, setScope } from './scope.ts';\n\nclass Service {\n  constructor(scope: Scope) {\n    setScope(this, scope);\n    // Should this be part of `lookup`, in general?\n    associateDestroyableChild(scope, this);\n  }\n}\n\ntype ServiceConstructor<T> = typeof Service &\n  ServiceFactory<T> & { new (scope: Scope): T };\n\nclass ServiceManager {\n  constructor(private scope: Scope) {}\n\n  createService<T extends Service>(Service: new (scope: Scope) => T): T {\n    return new Service(this.scope);\n  }\n}\n\nexport default setServiceManager(\n  (scope: Scope) => new ServiceManager(scope),\n  Service,\n);\n\n// Is this cheating?\nexport function service<S extends ServiceConstructor<unknown>>(\n  scopable: object,\n  factory: S,\n): InstanceType<S>;\nexport function service<T>(scopable: object, factory: ServiceFactory<T>): T;\nexport function service<T>(factory: ServiceFactory<T>): ServiceDecorator<T>;\nexport function service<T>(...args: unknown[]) {\n  runInDebug(() => {\n    if (detect(args)) {\n      let error = `The service function cannot be used directly as a decorator.\\n`;\n\n      error += `\\n`;\n      error += `  class MyClass {\\n`;\n      error += `    @service someField;\\n`;\n      error += `    ~~~~~~~~ this is not allowed\\n`;\n      error += `  }\\n`;\n      error += `\\n`;\n\n      error += `Instead, you will need to pass the service factory as an argument:\\n`;\n\n      error += `\\n`;\n      error += `  class MyClass {\\n`;\n      error += `    @service(MyService) someField;\\n`;\n      error += `            ~~~~~~~~~~~ this argument is required\\n`;\n      error += `  }\\n`;\n      error += `\\n`;\n\n      assert(error);\n    }\n\n    if (args.length === 0 || args.length > 2) {\n      let error = `The service function must be called with either one or two arguments.\\n`;\n\n      error += `\\n`;\n      error += `  class MyClass {\\n`;\n      error += `    @service(MyService) someField;\\n`;\n      error += `            ~~~~~~~~~~~ decorator form: this argument is required\\n`;\n      error += `\\n`;\n      error += `    anotherField = service(this, MyService);\\n`;\n      error += `                          ~~~~~~~~~~~~~~~~~ function form: these arguments are required\\n`;\n      error += `  }\\n`;\n      error += `\\n`;\n\n      error += `Please verify you are calling the function correctly.`;\n\n      assert(error);\n    }\n\n    if (args.length === 1 && !isServiceFactory(args[0])) {\n      let error = `The argument passed to @service(...) is not a valid ServiceFactory.\\n`;\n\n      error += `\\n`;\n      error += `  class MyClass {\\n`;\n      error += `    @service(MyService) someField;\\n`;\n      error += `            ~~~~~~~~~~~ this argument must be a ServiceFactory\\n`;\n      error += `  }\\n`;\n      error += `\\n`;\n\n      error += `Please verify you are calling the function correctly.`;\n\n      assert(error);\n    }\n\n    if (args.length === 2) {\n      if (args[0] === null || typeof args[0] !== 'object') {\n        let error = `The first argument passed to service(...) is not an object.\\n`;\n\n        error += `\\n`;\n        error += `  class MyClass {\\n`;\n        error += `    someField = service(this, MyService);\\n`;\n        error += `                        ~~~~ this argument must be an object\\n`;\n        error += `  }\\n`;\n        error += `\\n`;\n\n        error += `Please verify you are calling the function correctly.`;\n\n        assert(error);\n      }\n\n      if (getScope(args[0]) === undefined) {\n        let error = `The first argument passed to service(...) does not have a valid Scope.\\n`;\n\n        error += `\\n`;\n        error += `  class MyClass {\\n`;\n        error += `    someField = service(this, MyService);\\n`;\n        error += `                        ~~~~ this argument must be attached to a valid Scope\\n`;\n        error += `  }\\n`;\n        error += `\\n`;\n\n        error += 'Did you forget to call `setScope()` or `setOwner()`?';\n\n        assert(error);\n      }\n\n      if (!isServiceFactory(args[1])) {\n        let error = `The second argument passed to service(...) is not a valid ServiceFactory.\\n`;\n\n        error += `\\n`;\n        error += `  class MyClass {\\n`;\n        error += `    someField = service(this, MyService);\\n`;\n        error += `                              ~~~~~~~~~ this argument must be a ServiceFactory\\n`;\n        error += `  }\\n`;\n        error += `\\n`;\n\n        error += `Please verify you are calling the function correctly.`;\n\n        assert(error);\n      }\n    }\n  });\n\n  if (args.length === 1) {\n    const [factory] = args;\n    assert('unreachable: invalid ServiceFactory', isServiceFactory<T>(factory));\n    return serviceDecorator<T>(factory);\n  }\n\n  if (args.length === 2) {\n    assert(\n      'unreachable: not an object',\n      args[0] !== null && typeof args[0] === 'object',\n    );\n\n    assert('unreachable: invalid ServiceFactory', isServiceFactory<T>(args[1]));\n\n    const [scopable, factory] = args;\n    const scope = getScope(scopable);\n\n    assert('unreachable: invalid ServiceFactory', scope !== undefined);\n\n    return lookup<T>(scope, factory);\n  }\n\n  assert('unreachable');\n}\n"],"names":["Service","constructor","scope","setScope","associateDestroyableChild","ServiceManager","createService","setServiceManager","service","args","runInDebug","detect","error","assert","length","isServiceFactory","getScope","undefined","factory","serviceDecorator","scopable","lookup"],"mappings":"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"}