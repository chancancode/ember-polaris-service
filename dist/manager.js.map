{"version":3,"file":"manager.js","sources":["../src/manager.ts"],"sourcesContent":["import { type Scope, mapFor } from './scope.ts';\n\nconst INSTANTIATE = Symbol('service:instantiate');\n\nexport interface ServiceFactory<T> {\n  [INSTANTIATE]: (scope: Scope) => T;\n}\n\nexport interface ServiceManager<D extends object, T> {\n  createService(definition: D): T;\n}\n\nexport interface ServiceManagerFactory<D extends object, T> {\n  (scope: Scope): ServiceManager<D, T>;\n}\n\nexport function setServiceManager<D extends object, T>(\n  factory: ServiceManagerFactory<D, T>,\n  definition: D,\n): D & ServiceFactory<T> {\n  Object.defineProperty(definition, INSTANTIATE, {\n    configurable: false,\n    enumerable: false,\n    get(this: D) {\n      return (scope: Scope) => {\n        const manager = managerFor(scope, factory);\n        return manager.createService(this);\n      };\n    },\n  });\n\n  return definition as D & ServiceFactory<T>;\n}\n\nexport function isServiceFactory<T = unknown>(\n  factory: unknown,\n): factory is ServiceFactory<T> {\n  return (\n    factory !== null &&\n    (typeof factory === 'object' || typeof factory === 'function') &&\n    typeof (factory as Partial<ServiceFactory<T>>)[INSTANTIATE] === 'function'\n  );\n}\n\nexport function instantiate<T>(scope: Scope, factory: ServiceFactory<T>): T {\n  return factory[INSTANTIATE](scope);\n}\n\ntype InstantiatedManagers = WeakMap<\n  ServiceManagerFactory<object, unknown>,\n  ServiceManager<object, unknown>\n>;\n\nconst Managers = new WeakMap<Scope, InstantiatedManagers>();\n\nfunction managerFor<D extends object, T>(\n  scope: Scope,\n  factory: ServiceManagerFactory<D, T>,\n): ServiceManager<D, T> {\n  const managers = mapFor(scope, Managers);\n  let manager = managers.get(factory) as ServiceManager<D, T> | undefined;\n\n  if (manager === undefined) {\n    manager = factory(scope);\n    managers.set(factory, manager);\n  }\n\n  return manager;\n}\n"],"names":["INSTANTIATE","Symbol","setServiceManager","factory","definition","Object","defineProperty","configurable","enumerable","get","scope","manager","managerFor","createService","isServiceFactory","instantiate","Managers","WeakMap","managers","mapFor","undefined","set"],"mappings":";;AAEA,MAAMA,WAAW,GAAGC,MAAM,CAAC,qBAAqB,CAAC,CAAA;AAc1C,SAASC,iBAAiBA,CAC/BC,OAAoC,EACpCC,UAAa,EACU;AACvBC,EAAAA,MAAM,CAACC,cAAc,CAACF,UAAU,EAAEJ,WAAW,EAAE;AAC7CO,IAAAA,YAAY,EAAE,KAAK;AACnBC,IAAAA,UAAU,EAAE,KAAK;AACjBC,IAAAA,GAAGA,GAAU;AACX,MAAA,OAAQC,KAAY,IAAK;AACvB,QAAA,MAAMC,OAAO,GAAGC,UAAU,CAACF,KAAK,EAAEP,OAAO,CAAC,CAAA;AAC1C,QAAA,OAAOQ,OAAO,CAACE,aAAa,CAAC,IAAI,CAAC,CAAA;OACnC,CAAA;AACH,KAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOT,UAAU,CAAA;AACnB,CAAA;AAEO,SAASU,gBAAgBA,CAC9BX,OAAgB,EACc;EAC9B,OACEA,OAAO,KAAK,IAAI,KACf,OAAOA,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,KAAK,UAAU,CAAC,IAC9D,OAAQA,OAAO,CAAgCH,WAAW,CAAC,KAAK,UAAU,CAAA;AAE9E,CAAA;AAEO,SAASe,WAAWA,CAAIL,KAAY,EAAEP,OAA0B,EAAK;AAC1E,EAAA,OAAOA,OAAO,CAACH,WAAW,CAAC,CAACU,KAAK,CAAC,CAAA;AACpC,CAAA;AAOA,MAAMM,QAAQ,GAAG,IAAIC,OAAO,EAA+B,CAAA;AAE3D,SAASL,UAAUA,CACjBF,KAAY,EACZP,OAAoC,EACd;AACtB,EAAA,MAAMe,QAAQ,GAAGC,MAAM,CAACT,KAAK,EAAEM,QAAQ,CAAC,CAAA;AACxC,EAAA,IAAIL,OAAO,GAAGO,QAAQ,CAACT,GAAG,CAACN,OAAO,CAAqC,CAAA;EAEvE,IAAIQ,OAAO,KAAKS,SAAS,EAAE;AACzBT,IAAAA,OAAO,GAAGR,OAAO,CAACO,KAAK,CAAC,CAAA;AACxBQ,IAAAA,QAAQ,CAACG,GAAG,CAAClB,OAAO,EAAEQ,OAAO,CAAC,CAAA;AAChC,GAAA;AAEA,EAAA,OAAOA,OAAO,CAAA;AAChB;;;;"}